name: Test Package Submissions

on:
  pull_request:
    paths:
      - 'scripts/submit_packages.py'
      - '.github/workflows/submit-packages.yml'
      - 'scripts/requirements-packaging.txt'
      - 'packaging/**'
  workflow_dispatch:
    inputs:
      version:
        description: 'Test version number'
        required: true
        default: '0.1.0'

jobs:
  test-builds:
    name: Test Package Builds
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9']
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements-packaging.txt
      
      - name: Build test packages
        run: |
          python scripts/submit_packages.py \
            --version ${{ github.event.inputs.version || '0.1.0' }} \
            --dry-run \
            --skip-test
      
      - name: Run package tests
        run: pytest tests/binaries/test_binary.py -v
      
      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-packages-${{ matrix.os }}
          path: |
            dist/
            packaging/

  pypi-test:
    name: Test PyPI Package
    needs: test-builds
    uses: ./.github/workflows/binary-tests.yml
    with:
      version: ${{ github.event.inputs.version || '0.1.0' }}
      package_type: pypi
      artifact_name: test-packages-ubuntu-latest
    secrets: inherit

  windows-test:
    name: Test Windows Package
    needs: test-builds
    uses: ./.github/workflows/binary-tests.yml
    with:
      version: ${{ github.event.inputs.version || '0.1.0' }}
      package_type: windows
      artifact_name: test-packages-windows-latest
    secrets: inherit

  macos-test:
    name: Test macOS Package
    needs: test-builds
    uses: ./.github/workflows/binary-tests.yml
    with:
      version: ${{ github.event.inputs.version || '0.1.0' }}
      package_type: macos
      artifact_name: test-packages-macos-latest
    secrets: inherit

  linux-test:
    name: Test Linux Package
    needs: test-builds
    uses: ./.github/workflows/binary-tests.yml
    with:
      version: ${{ github.event.inputs.version || '0.1.0' }}
      package_type: linux
      artifact_name: test-packages-ubuntu-latest
    secrets: inherit

  report:
    name: Generate Test Report
    needs: [pypi-test, windows-test, macos-test, linux-test]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Create report
        uses: actions/github-script@v6
        with:
          script: |
            const results = {
              pypi: '${{ needs.pypi-test.result }}',
              windows: '${{ needs.windows-test.result }}',
              macos: '${{ needs.macos-test.result }}',
              linux: '${{ needs.linux-test.result }}'
            };
            
            const summary = Object.entries(results)
              .map(([pkg, result]) => `${pkg}: ${result}`)
              .join('\n');
            
            const body = `## Package Test Results\n\n${summary}`;
            
            if (context.eventName === 'pull_request') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              });
            }
