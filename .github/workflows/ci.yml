name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Ensure asset directories exist
      run: |
        # Create directory structure script if it doesn't exist
        mkdir -p scripts
        cat > scripts/ensure_asset_dirs.py << 'EOF'
        #!/usr/bin/env python3
        import os
        from pathlib import Path

        ASSET_DIR = Path("assets")
        REQUIRED_DIRS = [
            "brand/logo", "brand/colors", "brand/typography",
            "icons/windows", "icons/macos", "icons/source",
            "screenshots/windows", "screenshots/macos", "screenshots/features",
            "store/microsoft", "store/apple", "store/web",
            "marketing/press", "marketing/blog", "marketing/social",
            "docs/tutorials", "docs/diagrams", "docs/guides",
        ]

        def main():
            for dir_path in REQUIRED_DIRS:
                full_path = ASSET_DIR / dir_path
                os.makedirs(full_path, exist_ok=True)
                gitkeep_path = full_path / ".gitkeep"
                open(gitkeep_path, 'w').close()
                print(f"Created {dir_path}/.gitkeep")

            missing = [d for d in REQUIRED_DIRS if not (ASSET_DIR / d).exists()]
            if missing:
                print(f"Error: Directories still missing: {missing}")
                return 1
            print("All required directories exist")
            return 0

        if __name__ == "__main__":
            exit(main())
        EOF
        chmod +x scripts/ensure_asset_dirs.py
        python scripts/ensure_asset_dirs.py

    - name: Lint with Flake8
      run: |
        poetry run flake8 plainspeak tests docs/website/api --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=.venv
        poetry run flake8 plainspeak tests docs/website/api --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics --exclude=.venv

    - name: Check formatting with Black
      run: |
        poetry run black . --check

    - name: Type check with MyPy
      run: |
        poetry run mypy plainspeak

    - name: Test with Pytest
      run: |
        poetry run pytest
